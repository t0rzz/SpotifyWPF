<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <!-- Rimuove lo spazio riservato all'icona se non presente -->
  <Style x:Key="MenuItem_NoEmptyIconGutter" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Official Spotify Color Palette -->
  <Color x:Key="Color.Background">#FF121212</Color>
  <Color x:Key="Color.Surface">#FF1A1A1A</Color>
  <Color x:Key="Color.Card">#FF282828</Color>
  <Color x:Key="Color.Border">#FF404040</Color>
  <Color x:Key="Color.Foreground">#FFFFFFFF</Color>
  <Color x:Key="Color.Subtle">#FFB3B3B3</Color>
  <Color x:Key="Color.Primary">#FF1DB954</Color>
  <Color x:Key="Color.PrimaryHover">#FF1ED760</Color>
  <Color x:Key="Color.PrimaryPressed">#FF1AA34A</Color>
  <!-- Dark readable text on bright button backgrounds (green/red) -->
  <Color x:Key="Color.OnColorForeground">#FF121212</Color>
  <Color x:Key="Color.Accent">#FF1DB954</Color>
  <Color x:Key="Color.Danger">#FFE91429</Color>

  <SolidColorBrush x:Key="AppBackgroundBrush" Color="{StaticResource Color.Background}"/>
  <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource Color.Surface}"/>
  <SolidColorBrush x:Key="CardBrush" Color="{StaticResource Color.Card}"/>
  <SolidColorBrush x:Key="ControlBorderBrush" Color="{StaticResource Color.Border}"/>
  <SolidColorBrush x:Key="ControlForegroundBrush" Color="{StaticResource Color.Foreground}"/>
  <SolidColorBrush x:Key="SubtleForegroundBrush" Color="{StaticResource Color.Subtle}"/>
  <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource Color.Primary}"/>
  <SolidColorBrush x:Key="PrimaryHoverBrush" Color="{StaticResource Color.PrimaryHover}"/>
  <SolidColorBrush x:Key="PrimaryPressedBrush" Color="{StaticResource Color.PrimaryPressed}"/>
  <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource Color.Accent}"/>
  <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource Color.Danger}"/>
  <SolidColorBrush x:Key="OnColorForegroundBrush" Color="{StaticResource Color.OnColorForeground}"/>

  <SolidColorBrush x:Key="ControlHighlightBrush" Color="{StaticResource Color.Primary}"/>
  <SolidColorBrush x:Key="ControlHighlightForegroundBrush" Color="White"/>

  <!-- Tipografia default -->
  <Style TargetType="Window">
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="13"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
  </Style>

  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
  </Style>

  <!-- Button flat -->
  <Style TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource OnColorForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
    <Setter Property="Padding" Value="14,8"/>
    <Setter Property="Margin" Value="6,0,0,0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ControlTemplate.Resources>
            <Style TargetType="TextBlock">
              <Setter Property="Foreground">
                <Setter.Value>
                  <Binding Path="Foreground" RelativeSource="{RelativeSource AncestorType=Button}"/>
                </Setter.Value>
              </Setter>
            </Style>
            <!-- Ensure string content renders with Button's Foreground, overriding global TextBlock style -->
            <DataTemplate DataType="{x:Type sys:String}">
              <TextBlock Text="{Binding}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </DataTemplate>
          </ControlTemplate.Resources>
  <Border x:Name="bd"
          CornerRadius="6"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Margin="6,2"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Varianti moderne -->
  <Style x:Key="OutlineButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#11FFFFFF"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#22FFFFFF"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TextButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource PrimaryHoverBrush}"/>
        <Setter Property="Background" Value="#0FFFFFFF"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Foreground" Value="{StaticResource PrimaryPressedBrush}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource OnColorForegroundBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#FFD04945"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#FFBB3B37"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- TextBox -->
  <Style TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="10,6"/>
    <Setter Property="Margin" Value="6,0,0,0"/>
  </Style>

  <!-- Menu -->
  <Style TargetType="Menu">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="Padding" Value="12,8"/>
  </Style>

  <Style TargetType="MenuItem">
    <!-- Manteniamo il template di default per stabilitÃ  -->
    <Setter Property="Padding" Value="10,6"/>
    <Style.Triggers>
      <!-- Voci nei popup (sub-menu): testo scuro su popup chiaro di sistema -->
      <Trigger Property="Role" Value="SubmenuItem">
        <Setter Property="Foreground" Value="#222222"/>
        <Setter Property="Background" Value="{x:Null}"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Foreground" Value="#222222"/>
        <Setter Property="Background" Value="{x:Null}"/>
      </Trigger>
      <!-- Hover sobrio -->
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="#22000000"/>
      </Trigger>
      <!-- Disabilitati attenuati -->
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ContextMenu per subitems dei menu -->
  <Style TargetType="ContextMenu">
    <Setter Property="Background" Value="{StaticResource CardBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="4"/>
  </Style>

  <!-- Separator per menu -->
  <Style TargetType="Separator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Separator">
          <Border Margin="8,4"
                  Height="1"
                  Background="{DynamicResource ControlBorderBrush}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- StatusBar -->
  <Style TargetType="StatusBar">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource SubtleForegroundBrush}"/>
    <Setter Property="Padding" Value="8,6"/>
  </Style>

  <!-- GroupBox come card -->
  <Style TargetType="GroupBox">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="GroupBox">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{TemplateBinding Header}"
                       FontWeight="SemiBold"
                       Margin="4,0,0,6"
                       Foreground="{StaticResource SubtleForegroundBrush}"/>
            <Border Grid.Row="1"
                    Background="{StaticResource CardBrush}"
                    BorderBrush="{StaticResource ControlBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Padding="10"
                    SnapsToDevicePixels="True">
              <ContentPresenter/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Margin" Value="10"/>
  </Style>

  <!-- ProgressBar minimale -->
  <Style TargetType="ProgressBar">
    <Setter Property="Height" Value="6"/>
    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
    <Setter Property="Background" Value="#22000000"/>
  </Style>

  <!-- DataGrid moderno -->
  <Style TargetType="DataGrid">
    <Setter Property="Background" Value="{StaticResource CardBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="RowBackground" Value="Transparent"/>
    <Setter Property="AlternatingRowBackground" Value="#08000000"/>
    <Setter Property="HorizontalGridLinesBrush" Value="#1FFFFFFF"/>
    <Setter Property="VerticalGridLinesBrush" Value="#1FFFFFFF"/>
    <Setter Property="GridLinesVisibility" Value="All"/>
    <Setter Property="RowHeaderWidth" Value="0"/>
    <Setter Property="HeadersVisibility" Value="Column"/>
    <Setter Property="Margin" Value="4"/>
  </Style>

  <Style TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="#0FFFFFFF"/>
    <Setter Property="Foreground" Value="{StaticResource SubtleForegroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Padding" Value="8,6"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#11FFFFFF"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="DataGridRow">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="#331DB954"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#14FFFFFF"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- TabControl: default layout, simple margins -->
  <Style TargetType="TabControl">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Margin" Value="10"/>
  <!-- Space between header and content -->
  <Setter Property="Padding" Value="0,8,0,0"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabControl">
          <Grid KeyboardNavigation.TabNavigation="Local" ClipToBounds="False">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel"
                      Grid.Row="0"
                      Grid.Column="0"
                      Grid.ColumnSpan="1"
                      IsItemsHost="True"
                      HorizontalAlignment="Stretch"
                      Background="Transparent"
                      ClipToBounds="False"
                      KeyboardNavigation.TabIndex="1"
                      Panel.ZIndex="1"/>
            <Border Grid.Row="1" Grid.ColumnSpan="2"
        Background="{StaticResource CardBrush}"
        BorderBrush="{StaticResource ControlBorderBrush}"
        BorderThickness="1"
        Margin="0,-1,0,0">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent"
                                Margin="{TemplateBinding Padding}"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="TabItem">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="Padding" Value="16,8"/>
    <Setter Property="Margin" Value="0,0,8,0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="bd"
          Background="Transparent"
          CornerRadius="6"
          BorderThickness="1"
          BorderBrush="Transparent"
                  Padding="{TemplateBinding Padding}"
                  UseLayoutRounding="True"
                  SnapsToDevicePixels="True">
            <ContentPresenter ContentSource="Header"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
        <Setter TargetName="bd" Property="Background" Value="{StaticResource CardBrush}"/>
        <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter TargetName="bd" Property="CornerRadius" Value="6,6,0,0"/>
        <Setter TargetName="bd" Property="BorderThickness" Value="1,1,0,0"/>
        <Setter Property="Panel.ZIndex" Value="10"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="#11FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Modern Spotify-style Scrollbars -->
  <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#40FFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarThumbHoverBrush" Color="#60FFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarThumbPressedBrush" Color="#80FFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarTrackBrush" Color="#0AFFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarButtonBrush" Color="#20FFFFFF"/>

  <!-- Modern ScrollBar Thumb Style with Animations -->
  <Style x:Key="ModernScrollBarThumbStyle" TargetType="Thumb">
    <Setter Property="Background" Value="{StaticResource ScrollBarThumbBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Border x:Name="ThumbBorder"
                  Background="{TemplateBinding Background}"
                  CornerRadius="4"
                  SnapsToDevicePixels="True"
                  Margin="1,0">
            <Border.Effect>
              <DropShadowEffect x:Name="ShadowEffect"
                               ShadowDepth="0"
                               BlurRadius="2"
                               Opacity="0.3"
                               Color="Black"/>
            </Border.Effect>
            <Border.RenderTransform>
              <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
            </Border.RenderTransform>
            <Border.RenderTransformOrigin>
              <Point X="0.5" Y="0.5"/>
            </Border.RenderTransformOrigin>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                   To="#60FFFFFF" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                   Storyboard.TargetProperty="BlurRadius"
                                   To="4" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleX"
                                   To="1.1" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleY"
                                   To="1.1" Duration="0:0:0.2"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                   To="#40FFFFFF" Duration="0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                   Storyboard.TargetProperty="BlurRadius"
                                   To="2" Duration="0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleX"
                                   To="1" Duration="0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleY"
                                   To="1" Duration="0:0:0.3"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsDragging" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                   To="#80FFFFFF" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                   Storyboard.TargetProperty="BlurRadius"
                                   To="6" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleX"
                                   To="1.05" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleY"
                                   To="1.05" Duration="0:0:0.1"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                   To="#40FFFFFF" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                   Storyboard.TargetProperty="BlurRadius"
                                   To="2" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleX"
                                   To="1" Duration="0:0:0.2"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                   Storyboard.TargetProperty="ScaleY"
                                   To="1" Duration="0:0:0.2"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Modern ScrollBar Button Style (for arrows - we'll make them minimal) -->
  <Style x:Key="ModernScrollBarButtonStyle" TargetType="RepeatButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Border Background="Transparent" Width="8" Height="8"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Fully Customized Modern ScrollBar -->
  <Style TargetType="ScrollBar">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Width" Value="12"/>
    <Setter Property="MinWidth" Value="12"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollBar">
          <Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="12"/>
              <RowDefinition Height="*"/>
              <RowDefinition MaxHeight="12"/>
            </Grid.RowDefinitions>

            <!-- Track with subtle animation -->
            <Border Grid.Row="1" x:Name="TrackBorder"
                    Background="{StaticResource ScrollBarTrackBrush}"
                    CornerRadius="6"
                    Margin="2,0"
                    Opacity="0.5">
              <Border.Triggers>
                <EventTrigger RoutedEvent="Border.MouseEnter">
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="TrackBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.8" Duration="0:0:0.3"/>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Border.MouseLeave">
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="TrackBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.5" Duration="0:0:0.5"/>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </Border.Triggers>
            </Border>

            <!-- Top Button -->
            <RepeatButton x:Name="PART_LineUpButton"
                         Grid.Row="0"
                         Style="{StaticResource ModernScrollBarButtonStyle}"
                         Command="ScrollBar.LineUpCommand"/>

            <!-- Bottom Button -->
            <RepeatButton x:Name="PART_LineDownButton"
                         Grid.Row="2"
                         Style="{StaticResource ModernScrollBarButtonStyle}"
                         Command="ScrollBar.LineDownCommand"/>

            <!-- Thumb -->
            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ModernScrollBarButtonStyle}"/>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb x:Name="Thumb" Style="{StaticResource ModernScrollBarThumbStyle}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ModernScrollBarButtonStyle}"/>
              </Track.IncreaseRepeatButton>
            </Track>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <!-- Orientation-specific adjustments -->
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Height" Value="12"/>
        <Setter Property="MinHeight" Value="12"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ScrollBar">
              <Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="12"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition MaxWidth="12"/>
                </Grid.ColumnDefinitions>

                <!-- Track with subtle animation -->
                <Border Grid.Column="1" x:Name="TrackBorder"
                        Background="{StaticResource ScrollBarTrackBrush}"
                        CornerRadius="6"
                        Margin="0,2"
                        Opacity="0.5">
                  <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.MouseEnter">
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetName="TrackBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0.8" Duration="0:0:0.3"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Border.MouseLeave">
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetName="TrackBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0.5" Duration="0:0:0.5"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </EventTrigger>
                  </Border.Triggers>
                </Border>

                <!-- Left Button -->
                <RepeatButton x:Name="PART_LineLeftButton"
                             Grid.Column="0"
                             Style="{StaticResource ModernScrollBarButtonStyle}"
                             Command="ScrollBar.LineLeftCommand"/>

                <!-- Right Button -->
                <RepeatButton x:Name="PART_LineRightButton"
                             Grid.Column="2"
                             Style="{StaticResource ModernScrollBarButtonStyle}"
                             Command="ScrollBar.LineRightCommand"/>

                <!-- Thumb -->
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ModernScrollBarButtonStyle}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource ModernScrollBarThumbStyle}"/>
                  </Track.Thumb>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ModernScrollBarButtonStyle}"/>
                  </Track.IncreaseRepeatButton>
                </Track>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>

      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.3"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ScrollViewer: abilita panning touch (evita CanContentScroll globale che puÃ² invertire la direzione in alcuni controlli) -->
  <Style TargetType="ScrollViewer">
    <Setter Property="PanningMode" Value="Both"/>
  </Style>

  <!-- ToolTip styling to match Spotify dark theme -->
  <Style TargetType="ToolTip">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource SubtleForegroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="8,4"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              TextBlock.Foreground="{TemplateBinding Foreground}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
