<UserControl x:Class="SpotifyWPF.View.Page.PlaylistManagerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:SpotifyWPF.View.Page"
      xmlns:viewModel="clr-namespace:SpotifyWPF.ViewModel.Page"
      xmlns:conv="clr-namespace:SpotifyWPF.View.Converters"
      mc:Ignorable="d"
      d:DesignHeight="600" d:DesignWidth="800"
      DataContext="{Binding PlaylistManagerPageViewModel, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="15"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#FF404040"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#FF404040"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="IsEditable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Main ToggleButton -->
                            <ToggleButton Name="ToggleButton"
                                        Background="#FF404040"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="False"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <!-- Selected Item Text -->
                                                <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                         Foreground="White"
                                                         HorizontalAlignment="Left"
                                                         VerticalAlignment="Center"
                                                         Margin="8,0,0,0"/>
                                                <!-- Dropdown Arrow -->
                                                <Path Name="Arrow"
                                                    Grid.Column="1"
                                                    Data="M0,0 L4,4 L8,0"
                                                    Stroke="White"
                                                    StrokeThickness="2"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,8,0"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FF333333"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="#FF2A2A2A"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <!-- Dropdown Popup -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border Name="DropDownBorder"
                                        Background="#FF404040"
                                        BorderBrush="#FF555555"
                                        BorderThickness="1"
                                        MaxHeight="200">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="#FF1DB954"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="#FF1DB954"/>
                                <Setter TargetName="ToggleButton" Property="Background" Value="#FF333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="#FF404040"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF1DB954"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF404040"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="8,5"/>
        </Style>

        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF1DB954"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <conv:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <conv:BooleanToVisibilityConverterShow x:Key="BooleanToVisibilityConverterShow"/>
    </UserControl.Resources>

    <Grid Background="#FF121212">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Status Bar -->
        <Border Grid.Row="0" Background="#FF1DB954" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding Status}" Foreground="White" FontWeight="SemiBold" VerticalAlignment="Center"/>
                <ProgressBar Grid.Column="1" Width="200" Height="20" Visibility="{Binding ProgressVisibility}" IsIndeterminate="True" Margin="10,0,0,0"/>
            </Grid>
        </Border>

        <!-- Main Content -->
        <TabControl Grid.Row="1" Background="Transparent" BorderThickness="0">
            <TabItem Header="Create Playlist" Background="Transparent" Foreground="White">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="10">
                        <!-- Create Playlist Section -->
                        <Border Style="{StaticResource CardStyle}">
                            <StackPanel>
                                <TextBlock Text="Create New Playlist" FontSize="18" FontWeight="Bold" Foreground="White" Margin="0,0,0,15"/>

                                <Label Content="Playlist Name:" Style="{StaticResource LabelStyle}"/>
                                <TextBox Text="{Binding NewPlaylistName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}"/>

                                <Label Content="Description (Optional):" Style="{StaticResource LabelStyle}"/>
                                <TextBox Text="{Binding NewPlaylistDescription, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" Height="60" TextWrapping="Wrap" AcceptsReturn="True"/>

                                <StackPanel Orientation="Horizontal" Margin="5">
                                    <CheckBox Content="Public" IsChecked="{Binding NewPlaylistIsPublic}" Foreground="White" Margin="0,0,15,0"/>
                                    <CheckBox Content="Collaborative" IsChecked="{Binding NewPlaylistIsCollaborative}" Foreground="White"/>
                                </StackPanel>

                                <Label Content="Playlist Image (Optional):" Style="{StaticResource LabelStyle}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="{Binding SelectedImagePath, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" Width="300" IsReadOnly="True"/>
                                    <Button Content="Browse..." Command="{Binding SelectImageCommand}" Width="80"/>
                                </StackPanel>

                                <Button Content="Create Playlist" Command="{Binding CreatePlaylistCommand}" HorizontalAlignment="Left" Margin="5,15,0,0" MaxWidth="150"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Manage Tracks" Background="Transparent" Foreground="White">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Available Tracks -->
                    <Border Grid.Column="0" Style="{StaticResource CardStyle}" Margin="5">
                        <StackPanel>
                            <TextBlock Text="Available Tracks" FontSize="16" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>

                            <!-- Search Box -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Text="🔍" 
                                          FontSize="16" 
                                          VerticalAlignment="Center" 
                                          Margin="0,0,8,0" 
                                          Foreground="White"/>
                                <TextBox Text="{Binding SearchQuery}" 
                                        Width="400" 
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource TextBoxStyle}" 
                                        ToolTip="Search for tracks, artists, albums, playlists, shows, episodes, or audiobooks. You can use field filters like: artist:beatles, album:help, year:1965-1970, genre:rock"/>
                            </StackPanel>
                            
                            <!-- Search Controls -->
                            <StackPanel Margin="0,0,0,10">
                                <!-- Search Type Checkboxes -->
                                <WrapPanel Margin="0,0,0,10">
                                    <CheckBox Content="Track" IsChecked="{Binding SearchTrack}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Artist" IsChecked="{Binding SearchArtist}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Album" IsChecked="{Binding SearchAlbum}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Playlist" IsChecked="{Binding SearchPlaylist}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Show" IsChecked="{Binding SearchShow}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Episode" IsChecked="{Binding SearchEpisode}" Margin="0,0,10,0" Foreground="White"/>
                                    <CheckBox Content="Audiobook" IsChecked="{Binding SearchAudiobook}" Margin="0,0,10,0" Foreground="White"/>
                                </WrapPanel>
                                
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Search" 
                                           Command="{Binding SearchTracksCommand}" 
                                           Width="60" 
                                           Height="25"
                                           IsEnabled="{Binding IsSearching, Converter={StaticResource InverseBooleanConverter}}"/>
                                    <TextBlock Text="⏳" 
                                              FontSize="14" 
                                              VerticalAlignment="Center" 
                                              Margin="8,0,0,0"
                                              Visibility="{Binding IsSearching, Converter={StaticResource BooleanToVisibilityConverterShow}}"/>
                                    <Button Content="Load Top Tracks" 
                                           Command="{Binding LoadAvailableTracksCommand}" 
                                           Margin="15,0,0,0" 
                                           MaxWidth="120"
                                           IsEnabled="{Binding IsLoadingTracks, Converter={StaticResource InverseBooleanConverter}}"/>
                                    <TextBlock Text="⏳" 
                                              FontSize="14" 
                                              VerticalAlignment="Center" 
                                              Margin="8,0,0,0"
                                              Visibility="{Binding IsLoadingTracks, Converter={StaticResource BooleanToVisibilityConverterShow}}"/>
                                </StackPanel>
                            </StackPanel>

                            <Grid>
                                <DataGrid ItemsSource="{Binding AvailableTracks}" Height="350" 
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="200"/>
                                        <DataGridTextColumn Header="Details" Binding="{Binding Description}" Width="200"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="80"/>
                                        <DataGridTemplateColumn Header="Action" Width="60">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Button Content="+" Command="{Binding DataContext.AddTrackToSelectionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                                CommandParameter="{Binding}" Width="30" Height="25"
                                                                IsEnabled="{Binding CanAddToPlaylist}"
                                                                Visibility="{Binding CanAddToPlaylist, Converter={StaticResource BooleanToVisibilityConverterShow}}"/>
                                                        <TextBlock Text="✓" Foreground="Green" FontWeight="Bold" Margin="5,0,0,0" 
                                                                   Visibility="{Binding IsInSelectedPlaylist, Converter={StaticResource BooleanToVisibilityConverterShow}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>

                                <!-- Loading Overlay -->
                                <Border Background="#CC000000" 
                                        Visibility="{Binding IsSearching, Converter={StaticResource BooleanToVisibilityConverterShow}}"
                                        CornerRadius="5">
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="🔍" FontSize="24" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                                        <TextBlock Text="Searching..." Foreground="White" FontSize="14" HorizontalAlignment="Center"/>
                                        <ProgressBar Width="150" Height="4" IsIndeterminate="True" Margin="0,10,0,0"/>
                                    </StackPanel>
                                </Border>

                                <Border Background="#CC000000" 
                                        Visibility="{Binding IsLoadingTracks, Converter={StaticResource BooleanToVisibilityConverterShow}}"
                                        CornerRadius="5">
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="🎵" FontSize="24" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                                        <TextBlock Text="Loading tracks..." Foreground="White" FontSize="14" HorizontalAlignment="Center"/>
                                        <ProgressBar Width="150" Height="4" IsIndeterminate="True" Margin="0,10,0,0"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- Selected Tracks and Playlist Selection -->
                    <Border Grid.Column="1" Style="{StaticResource CardStyle}" Margin="5">
                        <StackPanel>
                            <TextBlock Text="Add to Playlist" FontSize="16" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>

                            <!-- Playlist Selection -->
                            <Label Content="Select Playlist:" Style="{StaticResource LabelStyle}"/>
                            <Grid>
                                <ComboBox ItemsSource="{Binding UserPlaylists}" SelectedItem="{Binding SelectedPlaylist}"
                                         DisplayMemberPath="Name"
                                         Style="{StaticResource ComboBoxStyle}"
                                         ItemContainerStyle="{StaticResource ComboBoxItemStyle}"/>
                                <TextBlock Text="Select a playlist..."
                                         Foreground="#FFAAAAAA"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         IsHitTestVisible="False">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedPlaylist}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>

                            <Button Content="Load Playlists" Command="{Binding LoadUserPlaylistsCommand}" Margin="5,5,5,15" MaxWidth="120"/>

                            <!-- Selected Tracks -->
                            <TextBlock Text="Selected Tracks:" FontSize="14" FontWeight="SemiBold" Foreground="White" Margin="0,0,0,5"/>
                            <DataGrid ItemsSource="{Binding SelectedTracks}" Height="250" 
                                      Style="{StaticResource DataGridStyle}"
                                      ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                      RowStyle="{StaticResource DataGridRowStyle}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Track Name" Binding="{Binding Name}" Width="230"/>
                                    <DataGridTextColumn Header="Artist" Binding="{Binding Artists}" Width="150"/>
                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="60"/>
                                    <DataGridTextColumn Header="Duration" Binding="{Binding DurationMs}" Width="80"/>
                                    <DataGridTemplateColumn Header="Remove" Width="60">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="×" Command="{Binding DataContext.RemoveTrackFromSelectionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                        CommandParameter="{Binding}" Style="{StaticResource DangerButton}" Width="25" Height="25" FontSize="14"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Button Content="Add to Playlist" Command="{Binding AddSelectedTracksToPlaylistCommand}" Margin="5,15,5,0" MaxWidth="150"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>