<UserControl x:Class="SpotifyWPF.View.Page.PlaylistsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:view="clr-namespace:SpotifyWPF.View"
             xmlns:conv="clr-namespace:SpotifyWPF.View.Converters"
             xmlns:ext="clr-namespace:SpotifyWPF.View.Extension"
             mc:Ignorable="d"
             DataContext="{Binding PlaylistsPage, Source={StaticResource Locator}}"    
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ContextMenu x:Key="PlaylistsContextMenu" Background="{DynamicResource CardBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1" Padding="4" OverridesDefaultStyle="True" FocusVisualStyle="{x:Null}">
            <ContextMenu.Template>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </ContextMenu.Template>
            <ContextMenu.Resources>
                <!-- Keyed style to avoid merging with any implicit/global MenuItem style -->
                <Style x:Key="MenuItemPlain" TargetType="MenuItem" BasedOn="{x:Null}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}"/>
                    <Setter Property="Padding" Value="8,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="MenuItem">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter ContentSource="Header"
                                                      RecognizesAccessKey="True"
                                                      VerticalAlignment="Center"
                                                      TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHighlightBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ControlHighlightForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.6"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!-- Implicit style so only MenuItem gets the template; Separator is unaffected -->
                <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemPlain}"/>
            </ContextMenu.Resources>
            <!-- Removed ItemContainerStyle to avoid applying a MenuItem style to Separator -->

            <!-- Items -->
            <MenuItem Header="Load Tracks"
                      Command="{Binding PlacementTarget.Tag.LoadTracksCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <Separator/>
            <MenuItem Header="Open in Spotify"
                      Command="{Binding PlacementTarget.Tag.OpenInSpotifyCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <MenuItem Header="Copy Link"
                      Command="{Binding PlacementTarget.Tag.CopyPlaylistLinkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <Separator/>
            <MenuItem Header="Unfollow (Delete)"
                      Foreground="{DynamicResource DangerBrush}"
                      Command="{Binding PlacementTarget.Tag.DeletePlaylistsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding PlacementTarget.ToolTip, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCurrentTabCommand}" />
    </UserControl.InputBindings>

    <DockPanel LastChildFill="True">
        <!-- Greeting header -->
        <Border DockPanel.Dock="Top" Margin="8,8,8,0" Background="Transparent">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Ellipse Width="28" Height="28" StrokeThickness="0.5" Stroke="{DynamicResource ControlBorderBrush}">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding ProfileImagePath}" Stretch="UniformToFill"/>
                    </Ellipse.Fill>
                </Ellipse>
                <TextBlock Text="{Binding GreetingText}" FontSize="16" FontWeight="SemiBold" Margin="8,0,0,0"/>
            </StackPanel>
        </Border>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="8,8,8,0">
            <Button Content="Start" Command="{Binding StartLoadPlaylistsCommand}" IsEnabled="{Binding CanStart}" Margin="0,0,8,0"/>
            <Button Content="Stop" Command="{Binding StopLoadPlaylistsCommand}" IsEnabled="{Binding CanStop}"/>
        </StackPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding Status}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Stretch">
                <ProgressBar IsIndeterminate="True" Visibility="{Binding ProgressVisibility}"/>
            </StatusBarItem>
        </StatusBar>

        <TextBox DockPanel.Dock="Bottom"
                 Height="120"
                 Margin="8,8,8,8"
                 IsReadOnly="True"
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"
                 Text="{Binding OutputLog}"
                 FontFamily="Consolas"
                 TextWrapping="NoWrap"
                 Background="{DynamicResource CardBrush}"
                 BorderBrush="{DynamicResource ControlBorderBrush}"
                 BorderThickness="1"
                 ext:TextBoxExtensions.AutoScrollToEnd="True" />

    <TabControl Margin="6" SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay}">
            <TabItem Header="Playlists">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <GroupBox Header="Playlists">
                        <DataGrid x:Name="PlaylistsDataGrid" ItemsSource="{Binding Playlists}" AutoGenerateColumns="False" CanUserAddRows="False">
                            <DataGrid.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick"
                                              Command="{Binding LoadTracksCommand}"
                                              CommandParameter="{Binding ElementName=PlaylistsDataGrid, Path=SelectedItem}"/>
                                <KeyBinding Key="Delete"
                                            Command="{Binding DeletePlaylistsCommand}"
                                            CommandParameter="{Binding ElementName=PlaylistsDataGrid, Path=SelectedItems}"/>
                            </DataGrid.InputBindings>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                    <!-- Expose the grid selection to the context menu via PlacementTarget.ToolTip -->
                                    <Setter Property="ToolTip" Value="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource PlaylistsContextMenu}"/>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" Width="2*"/>
                                <DataGridTextColumn Header="Created By" Binding="{Binding OwnerName}" IsReadOnly="True" Width="*"/>
                                <DataGridTextColumn Header="# Tracks" Binding="{Binding TracksTotal}" IsReadOnly="True" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>

                    <GroupBox Grid.Column="1" Header="Tracks">
                        <DataGrid x:Name="TracksDataGrid" ItemsSource="{Binding Tracks}" AutoGenerateColumns="False" CanUserAddRows="False">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu Background="{DynamicResource CardBrush}"
                                                        BorderBrush="{DynamicResource ControlBorderBrush}"
                                                        BorderThickness="1" Padding="4" OverridesDefaultStyle="True" FocusVisualStyle="{x:Null}"
                                                        DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <ContextMenu.Template>
                                                    <ControlTemplate TargetType="ContextMenu">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Padding="{TemplateBinding Padding}"
                                                                SnapsToDevicePixels="True">
                                                            <ItemsPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </ContextMenu.Template>
                                                <ContextMenu.Resources>
                                                    <!-- Proxy to expose the row's DataContext (track) within this ContextMenu -->
                                                    <view:BindingProxy x:Key="RowProxy" Data="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <conv:MultiJoinConverter x:Key="MultiJoin"/>
                                                    <Style x:Key="TracksMenuItemParent" TargetType="MenuItem" BasedOn="{x:Null}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}"/>
                                                        <Setter Property="Padding" Value="8,6,4,6"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="MenuItem">
                                                                    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <ContentPresenter Grid.Column="0" ContentSource="Header"
                                                                                              RecognizesAccessKey="True"
                                                                                              VerticalAlignment="Center"
                                                                                              TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            <Path Grid.Column="1" Margin="8,0,0,0" VerticalAlignment="Center" Width="8" Height="10"
                                                                                  Stretch="Fill" StrokeThickness="2"
                                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                  Data="M0,0 L6,5 L0,10"/>
                                                                            <Popup x:Name="PART_Popup" Placement="Right" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                   AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                                                                <Border Background="{DynamicResource CardBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1"
                                                                                        Effect="{DynamicResource DropShadowEffect}">
                                                                                    <ItemsPresenter/>
                                                                                </Border>
                                                                            </Popup>
                                                                        </Grid>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsHighlighted" Value="True">
                                                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHighlightBrush}"/>
                                                                            <Setter Property="Foreground" Value="{DynamicResource ControlHighlightForegroundBrush}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.6"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="TracksMenuItemPlain" TargetType="MenuItem" BasedOn="{x:Null}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}"/>
                                                        <Setter Property="Padding" Value="8,6"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="MenuItem">
                                                                    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="18"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBlock x:Name="CheckGlyph" Grid.Column="0" Text="✓" FontSize="12"
                                                                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                       Visibility="Collapsed"
                                                                                       Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            <ContentPresenter Grid.Column="1" ContentSource="Header"
                                                                                              RecognizesAccessKey="True"
                                                                                              VerticalAlignment="Center"
                                                                                              TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        </Grid>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsHighlighted" Value="True">
                                                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHighlightBrush}"/>
                                                                            <Setter Property="Foreground" Value="{DynamicResource ControlHighlightForegroundBrush}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="CheckGlyph" Property="Visibility" Value="Visible"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.6"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ContextMenu.Resources>
                                                <MenuItem StaysOpenOnClick="False" x:Name="PlayToMenuItemPlaylists" Header="Play to" Style="{StaticResource TracksMenuItemParent}"
                                                          Tag="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.Id}">
                                                    <!-- Submenu opens without extra commands; devices refresh when menu opens at ViewModel level if needed -->
                                                    <MenuItem.ItemsSource>
                                                        <Binding RelativeSource="{RelativeSource AncestorType=ContextMenu}" Path="PlacementTarget.Tag.Devices"/>
                                                    </MenuItem.ItemsSource>
                                                     <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="MenuItem" BasedOn="{StaticResource TracksMenuItemPlain}">
                                                            <Setter Property="IsCheckable" Value="True"/>
                                                            <Setter Property="IsChecked" Value="{Binding IsActive}"/>
                                                            <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
                                                            <Setter Property="Header" Value="{Binding Name, StringFormat=Play to {0}}"/>
                                                            <Setter Property="Command" Value="{Binding PlacementTarget.Tag.PlayToDeviceCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                            <!-- Optional: remove debug tooltip -->
                                                            <!-- Build CommandParameter via converter to avoid StringFormat pitfalls -->
                                                            <Setter Property="CommandParameter">
                                                                <Setter.Value>
                                                                    <MultiBinding Converter="{StaticResource MultiJoin}" ConverterParameter="|">
                                                                        <Binding Path="Id"/>
                                                                        <Binding Source="{StaticResource RowProxy}" Path="Data.Id"/>
                                                                    </MultiBinding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsHighlighted" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource ControlHighlightBrush}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource ControlHighlightForegroundBrush}"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding TrackName}" IsReadOnly="True" Width="2*"/>
                                <DataGridTextColumn Header="Artist(s)" Binding="{Binding Artists}" IsReadOnly="True" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Users/Artists">
                <DockPanel>
                    <DockPanel.Resources>
                        <ContextMenu x:Key="ArtistsContextMenu" Background="{DynamicResource CardBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1" Padding="4" OverridesDefaultStyle="True" FocusVisualStyle="{x:Null}">
                            <ContextMenu.Template>
                                <ControlTemplate TargetType="ContextMenu">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="True">
                                        <ItemsPresenter />
                                    </Border>
                                </ControlTemplate>
                            </ContextMenu.Template>
                            <ContextMenu.Resources>
                                <Style x:Key="ArtistMenuItemPlain" TargetType="MenuItem" BasedOn="{x:Null}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}"/>
                                    <Setter Property="Padding" Value="8,6"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="MenuItem">
                                                <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter ContentSource="Header"
                                                                      RecognizesAccessKey="True"
                                                                      VerticalAlignment="Center"
                                                                      TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsHighlighted" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHighlightBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource ControlHighlightForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource ArtistMenuItemPlain}"/>
                            </ContextMenu.Resources>

                            <MenuItem Header="Open in Spotify"
                                      Command="{Binding PlacementTarget.Tag.OpenInSpotifyArtistCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Copy Link"
                                      Command="{Binding PlacementTarget.Tag.CopyArtistLinkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <Separator/>
                            <MenuItem Header="Unfollow"
                                      Foreground="{DynamicResource DangerBrush}"
                                      Command="{Binding PlacementTarget.Tag.UnfollowArtistsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      CommandParameter="{Binding PlacementTarget.ToolTip, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </ContextMenu>
                    </DockPanel.Resources>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,8">
                        <Button Content="Load Followed" Command="{Binding LoadFollowedArtistsCommand}" Margin="0,0,8,0"/>
                        <Button Content="Stop" Command="{Binding StopLoadFollowedArtistsCommand}" Margin="0,0,8,0"/>
                        <Button Content="Unfollow Selected" Command="{Binding UnfollowArtistsCommand}" CommandParameter="{Binding ElementName=ArtistsDataGrid, Path=SelectedItems}"/>
                    </StackPanel>
                    <DataGrid x:Name="ArtistsDataGrid" ItemsSource="{Binding FollowedArtists}" AutoGenerateColumns="False" CanUserAddRows="False" SelectionMode="Extended">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                <!-- Expose the DataGrid.SelectedItems to the ContextMenu via PlacementTarget.ToolTip -->
                                <Setter Property="ToolTip" Value="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                <Setter Property="ContextMenu" Value="{StaticResource ArtistsContextMenu}"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" Width="2*"/>
                            <DataGridTextColumn Header="Followers" Binding="{Binding FollowersTotal}" IsReadOnly="True" Width="*"/>
                            <DataGridTextColumn Header="Popularity" Binding="{Binding Popularity}" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
